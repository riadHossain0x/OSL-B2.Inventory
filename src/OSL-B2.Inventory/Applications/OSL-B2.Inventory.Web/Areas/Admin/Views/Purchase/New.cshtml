@using System.Dynamic
@model OSL_B2.Inventory.Web.Areas.Admin.Models.PurchaseCreateViewModels
@{
    ViewData["Title"] = "New Purchase";
    ViewBag.PageNav = "New";

    dynamic MidNav = new ExpandoObject();
    MidNav.Title = "Purchase";
    MidNav.Link = "/Admin/Purchase/";
    ViewBag.MidNav = MidNav;
}

<div class="card card-primary">
    <div class="card-header">
        <div class="row">
            <div class="col-6">
                <div class="float-left">
                    <h3 class="card-title">New Purchase Form</h3>
                </div>
            </div>
            <div class="col-6">
                <div class="float-right">
                    <a href="/Admin/Purchase" class="btn btn-primary btn-sm">Manage Purchase</a>
                </div>
            </div>
        </div>
    </div>
    @using (Html.BeginForm("New", "Purchase", new { area = "Admin" }, FormMethod.Post))
    {
        @Html.AntiForgeryToken()

<div class="card-body">
    <div class="form-group row">
        <div class="col-md-2">
            @Html.LabelFor(model => model.PurchaseNo, htmlAttributes: new { @class = "control-label" })
            <i class="text-danger">*</i>
        </div>
        <div class="col-md-4">
            @Html.EditorFor(model => model.PurchaseNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PurchaseNo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        <div class="col-md-2">
            @Html.LabelFor(model => model.PurchaseDate, htmlAttributes: new { @class = "control-label" })
            <i class="text-danger">*</i>
        </div>
        <div class="col-md-4">
            @Html.EditorFor(model => model.PurchaseDate, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group row">
        <div class="col-md-2">
            @Html.LabelFor(model => model.Details, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-md-4">
            @Html.TextAreaFor(model => model.Details, 5, 40, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Details, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        <div class="col-10">
            <table id="table" class="table-bordered">
                <thead>
                    <tr>
                        <th class="text-center">Supplier</th>
                        <th class="text-center">Category</th>
                        <th class="text-center">Product</th>
                        <th class="text-center">Quantity</th>
                        <th class="text-center">Rate</th>
                        <th class="text-center">Total</th>
                        <th class="text-center" style="width:8%">Action</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
                <tfoot>
                    <tr>
                        <th class="text-center">
                            <button type="button" id="btnAdd" class="btn btn-sm btn-info m-1" style="width:80%">Add New Item</button>
                        </th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th class="text-right">Grand Total:</th>
                        <th>
                            <input class="form-control text-box single-line text-right" data-val="true" data-val-number="The field Grand Total must be a number." data-val-required="The Grand Total field is required." id="GrandTotal" name="GrandTotal" type="text" value="0.00" readonly>
                            <span class="field-validation-valid text-danger" data-valmsg-for="Total" data-valmsg-replace="true"></span>
                        </th>
                        <th style="width:8%"></th>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>
    <div class="form-group row">
        <div class="col-10 text-right pt-2">
            <a href="/Admin/Purchase" class="btn btn-danger">Cancel</a>
            <input id="btnSubmit" type="submit" value="Save" class="btn btn-primary" />
        </div>
    </div>
</div>
    }
</div>
@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        function format() {
            var args = arguments;
            if (args.length <= 1) {
                return args;
            }
            var result = args[0];
            for (var i = 1; i < args.length; i++) {
                result = result.replace(new RegExp("\\{" + (i - 1) + "\\}", "g"), args[i]);
            }
            return result;
        }
    </script>
    <script>
        var render = "";
        var count = 0;
        $(document).ready(function () {
            render = `<tr id="section-{0}">
                              <td style="width:15%">
                                  <span id="spanSupplier" class="field-validation-valid text-danger" data-valmsg-for="SupplierId" data-valmsg-replace="true"></span>
                                  <select class="form-control valid" data-val="true" data-val-number="The field Supplier must be a number." data-val-required="The Supplier field is required." id="supplier" name="SupplierId" aria-describedby="supplier-error" aria-invalid="false">
                                      <option value="null">Select Supplier</option>
                                      @if(ViewBag.Suppliers != null)
                                      {
                                          foreach (var supplier in ViewBag.Suppliers)
                                          {
                                              <option value="@supplier.Id">@supplier.Name</option>
                                          }
                                      }
                                  </select>
                              </td>
                              <td style="width:15%">
                                  <span id="spanCategory" class="field-validation-valid text-danger" data-valmsg-for="ProductId" data-valmsg-replace="true"></span>
                                  <select onchange="GetProducts(this, 'product-{1}');" class="form-control valid" data-val="true" data-val-number="The field Category must be a number." data-val-required="The Category field is required." id="category" name="CategoryId" aria-describedby="category-error" aria-invalid="false">
                                      <option value="null">Select Category</option>
                                      @if(ViewBag.Categories != null)
                                      {
                                          foreach(var category in ViewBag.Categories)
                                          {
                                              <option value="@category.Id">@category.Name</option>
                                          }
                                      }
                                  </select>
                              </td>
                              <td style="width:15%">
                                  <span id="spanProduct" class="field-validation-valid text-danger" data-valmsg-for="ProductId" data-valmsg-replace="true"></span>
                                  <select class="form-control valid" data-val="true" data-val-number="The field Product must be a number." data-val-required="The Product field is required." id="product-{2}" name="ProductId" aria-describedby="product-error" aria-invalid="false">
                                  </select>
                              </td>
                              <td style="width:12%">
                                  <span class="field-validation-valid text-danger" data-valmsg-for="Quantity" data-valmsg-replace="true"></span>
                                  <input class="form-control text-box single-line text-right" data-val="true" data-val-number="The field Quantity must be a number." data-val-required="The Quantity field is required." id="Quantity" name="Quantity" type="number" min="0" value="0">
                              </td>
                              <td style="width:12%">
                                  <span class="field-validation-valid text-danger" data-valmsg-for="Price" data-valmsg-replace="true"></span>
                                  <input class="form-control text-box single-line text-right" data-val="true" data-val-number="The field Price must be a number." data-val-required="The Price field is required." id="Price" name="Price" type="text" value="0.00">
                              </td>
                              <td style="width:12%">
                                  <span class="field-validation-valid text-danger" data-valmsg-for="Total" data-valmsg-replace="true"></span>
                                  <input class="form-control text-box single-line text-right" data-val="true" data-val-number="The field Total must be a number." data-val-required="The Total field is required." id="Total" name="Total" type="text" value="0.00" readonly>
                              </td>
                              <td class="text-center">
                                  <button type="button" id="btnDelete" class="btn btn-danger btn-sm">
                                                      <i class="fas fa-trash"></i>
                                                      Delete
                                 </button>
                              </td>
                          </tr>`;
            $("#table").append(format(render, count++, count, count));
        });

        // add new row in table
        $("#btnAdd").on("click", function () {
            $("#table").append(format(render, count++, count, count));
        });

        // delete current row
        $("#table").on("click", "#btnDelete", function () {
            var rowCount = $("#table tr").length;
            if (rowCount > 3)
                $(this).closest("tr").remove();
            return false;
        });

        // validation
        $("#btnSubmit").on("click", function () {

            var error = 0;
            $("[id=supplier]").each(function () {
                if ($(this).val() == 'null') {
                    $("#spanSupplier").html("The Supplier field is required.");
                    $("#spanCategory").html("");
                    error++;
                }
            });
            console.log(count);

            $("[id=category]").each(function () {
                if ($(this).val() == 'null') {
                    $("#spanCategory").html("The Category field is required.");
                    $("#spanSupplier").html("");
                    error++;
                }
            });

            if (error > 0)
                return false;

            $("#spanSupplier").html("");
            $("#spanCategory").html("");
        });

        // Dropdown events
        function GetProducts(event, element) {
            var value = event.value;
            $.ajax({
                url: '/admin/purchase/GetProducts',
                type: 'POST',
                data: { 'categoryId': value },
                success: function (data) {
                    $('#product').empty();
                    $.each(data, function (i, item) {
                        //var close = $(this).closest("td");
                        //console.log(close);
                        $('#' + element).append($('<option>', {
                            value: item.value,
                            text: item.text
                        }));
                    });
                }
            });
        }

    </script>
}
